@page "/channel-videos/{channelId}"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using TargetBrowse.Features.ChannelVideos.Models
@using TargetBrowse.Features.ChannelVideos.Services
@using TargetBrowse.Features.ChannelVideos.Components
@using TargetBrowse.Services

@attribute [Authorize]

<PageTitle>@GetPageTitle()</PageTitle>

<!-- Loading State -->
@if (Model.IsLoading)
{
    <div class="loading-container d-flex justify-content-center align-items-center py-5">
        <div class="text-center">
            <div class="spinner-border text-primary mb-3" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="text-muted">Loading channel videos...</p>
        </div>
    </div>
}
else if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="error-container py-5">
        <div class="alert alert-danger" role="alert">
            <h5 class="alert-heading">
                <i class="bi bi-exclamation-triangle-fill me-2"></i>
                Unable to Load Channel Videos
            </h5>
            <p class="mb-3">@Model.ErrorMessage</p>
            <div class="d-flex gap-2">
                <button type="button" class="btn btn-outline-danger" @onclick="RetryLoad">
                    <i class="bi bi-arrow-clockwise me-1"></i>
                    Try Again
                </button>
                <a href="/video-library" class="btn btn-secondary">
                    <i class="bi bi-arrow-left me-1"></i>
                    Back to Library
                </a>
            </div>
        </div>
    </div>
}
else
{
    <!-- Channel Header -->
    <div class="channel-header mb-4">
        <div class="row align-items-center">
            <!-- Channel Avatar and Info -->
            <div class="col-md-8">
                <div class="d-flex align-items-center">
                    <!-- Channel Thumbnail -->
                    <div class="channel-avatar me-3">
                        <img src="@GetChannelThumbnailUrl()"
                             class="rounded-circle"
                             alt="@Model.Channel.Name"
                             loading="lazy"
                             onerror="this.src='https://via.placeholder.com/80x80?text=Channel'" />
                    </div>

                    <!-- Channel Details -->
                    <div class="channel-info">
                        <h1 class="channel-name h4 mb-1">
                            @Model.Channel.Name
                            @if (Model.UserRating.HasValue)
                            {
                                <span class="badge bg-warning text-dark ms-2">
                                    <i class="bi bi-star-fill me-1"></i>
                                    @Model.UserRating.Value stars
                                </span>
                            }
                        </h1>

                        <div class="channel-stats text-muted">
                            @if (!string.IsNullOrEmpty(Model.Channel.SubscriberCountDisplay) && Model.Channel.SubscriberCountDisplay != "N/A")
                            {
                                <span class="me-3">
                                    <i class="bi bi-people me-1"></i>
                                    @Model.Channel.SubscriberCountDisplay subscribers
                                </span>
                            }

                            @if (!string.IsNullOrEmpty(Model.Channel.VideoCountDisplay) && Model.Channel.VideoCountDisplay != "N/A")
                            {
                                <span class="me-3">
                                    <i class="bi bi-play-circle me-1"></i>
                                    @Model.Channel.VideoCountDisplay videos
                                    @if (!string.IsNullOrEmpty(Model.Channel.DatabaseVideoCountDisplay))
                                    {
                                        <span class="text-muted"> @Model.Channel.DatabaseVideoCountDisplay</span>
                                    }
                                </span>
                            }

                            <!-- Add LastCheckDate display -->
                            <span class="me-3">
                                <i class="bi bi-clock-history me-1"></i>
                                Last checked: @Model.Channel.LastCheckDateDisplay
                            </span>

                            @if (Model.IsTrackedByUser)
                            {
                                <span class="badge bg-success">
                                    <i class="bi bi-check-circle me-1"></i>
                                    Tracking
                                </span>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Actions -->
            <div class="col-md-4 text-md-end">
                <a href="@Model.Channel.ChannelUrl"
                   target="_blank"
                   class="btn btn-outline-primary">
                    <i class="bi bi-youtube me-1"></i>
                    View on YouTube
                    <i class="bi bi-box-arrow-up-right ms-1 small"></i>
                </a>
            </div>
        </div>
    </div>

    <div class="row">

        @* <div class="col-lg-3">
            <!-- Help and Tips Sidebar -->
        </div> *@

        <div class="col-lg-12">
            <!-- Videos Section -->
            <div class="videos-section">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h2 class="h5 mb-0">
                        <i class="bi bi-play-circle me-2"></i>
                        Recent Videos
                    </h2>
                    <span class="badge bg-secondary">@Model.VideoCountDisplay</span>
                </div>

                <!-- Channel Video Grid -->
                <div class="channel-video-grid">
                    @if (Model.Videos.Any())
                    {
                        <div class="row g-2">
                            @foreach (var video in Model.Videos)
                            {
                                <div class="col-lg-2 col-md-3 col-sm-6 mb-1">
                                    <ChannelVideoCard Video="@video" />
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="empty-state text-center py-5">
                            <div class="empty-state-icon mb-3">
                                <i class="bi bi-play-circle display-1 text-muted"></i>
                            </div>
                            <h5 class="text-muted mb-2">No Recent Videos Found</h5>
                            <p class="text-muted">
                                This channel hasn't published any videos in the last year,
                                or the videos may not be available.
                            </p>
                            <a href="@Model.Channel.ChannelUrl" target="_blank" class="btn btn-outline-primary">
                                <i class="bi bi-youtube me-1"></i>
                                Check Channel on YouTube
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Back to Library Button -->
    <div class="back-navigation mt-4 pt-3 border-top">
        <a href="/video-library" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left me-1"></i>
            Back to Library
        </a>
    </div>
}