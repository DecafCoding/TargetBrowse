@using TargetBrowse.Features.Suggestions.Models
@using TargetBrowse.Features.Suggestions.Components

<div class="card suggestion-card h-100 @GetCardCssClass()">
    <!-- Selection Checkbox (Batch Mode) -->
    @if (AllowSelection)
    {
        <div class="selection-checkbox">
            <input type="checkbox"
                   class="form-check-input"
                   @onchange="ToggleSelection"
                   checked="@IsSelected"
                   id="suggestion-@Suggestion.Id" />
            <label class="form-check-label visually-hidden" for="suggestion-@Suggestion.Id">
                Select suggestion
            </label>
        </div>
    }

    <!-- Video Thumbnail Container -->
    <div class="position-relative video-thumbnail-container">
        <img src="@GetThumbnailUrl()"
             class="card-img-top video-thumbnail"
             alt="@Suggestion.Video.Title"
             loading="lazy"
             onerror="handleThumbnailError(this, '@Suggestion.Video.YouTubeVideoId')" />

        <!-- Duration Badge -->
        @if (Suggestion.Video.Duration > 0)
        {
            <span class="badge bg-dark position-absolute duration-badge">
                @Suggestion.Video.FormattedDuration
            </span>
        }

        <!-- Source Badge -->
        <div class="position-absolute source-badge-container">
            <SuggestionSourceBadge Suggestion="@Suggestion" ShowText="false" Size="small" />
        </div>

        <!-- Score Badge (if available) -->
        @if (Suggestion.Score.HasValue)
        {
            <span class="badge bg-secondary position-absolute score-badge" title="Suggestion Score: @Suggestion.FormattedScore">
                @Suggestion.FormattedScore
            </span>
        }

        <!-- Expiry Warning -->
        @if (Suggestion.IsNearExpiry)
        {
            <span class="badge bg-warning text-dark position-absolute expiry-badge" title="Expires in @Suggestion.DaysUntilExpiry days">
                <i class="bi bi-clock"></i>
                @Suggestion.DaysUntilExpiry d
            </span>
        }
    </div>

    <!-- Video Details -->
    <div class="card-body d-flex flex-column p-3">
        <!-- Video Title -->
        <h6 class="card-title video-title mb-2">
            <a href="@GetYouTubeUrl(Suggestion.Video)"
               target="_blank"
               class="text-decoration-none title-link"
               title="@Suggestion.Video.Title">
                @Suggestion.Video.Title
            </a>
        </h6>

        <!-- Channel Info -->
        <div class="video-channel mb-2">
            <a href="@GetChannelUrl(Suggestion.Video)"
               target="_blank"
               class="text-muted text-decoration-none channel-link">
                <i class="bi bi-person-circle me-1"></i>
                @Suggestion.Video.ChannelName
            </a>
        </div>

        <!-- Video Metadata -->
        <div class="video-metadata mb-2">
            <small class="text-muted">
                @if (!string.IsNullOrEmpty(Suggestion.Video.FormattedViewCount))
                {
                    <span title="@(Suggestion.Video.ViewCount.ToString("N0")) views">@Suggestion.Video.FormattedViewCount</span>
                    <span class="mx-1">•</span>
                }
                <span title="Published @Suggestion.Video.PublishedAt.ToString("MMM d, yyyy")">@Suggestion.Video.TimeSincePublished</span>
            </small>
        </div>

        <!-- Suggestion Reason -->
        <div class="suggestion-reason mb-2">
            <div class="d-flex align-items-center gap-2 mb-1">
                <SuggestionSourceBadge Suggestion="@Suggestion" ShowText="true" Size="small" />
            </div>
            <small class="text-muted suggestion-reason-text">
                @GetReasonDescription()
            </small>
        </div>

        <!-- Suggestion Metadata -->
        <div class="suggestion-metadata mb-3">
            <small class="text-muted d-flex justify-content-between">
                <span title="Suggested @Suggestion.CreatedAt.ToString("MMM d, yyyy h:mm tt")">
                    <i class="bi bi-clock me-1"></i>
                    @Suggestion.TimeSinceCreated
                </span>
                <span title="Expires in @Suggestion.DaysUntilExpiry days">
                    <i class="bi bi-hourglass-split me-1"></i>
                    @Suggestion.DaysUntilExpiry days left
                </span>
            </small>
        </div>

        <!-- Video Description -->
        @if (!string.IsNullOrEmpty(Suggestion.Video.Description) && Suggestion.Video.Description != "No description available")
        {
            <p class="video-description text-muted small mb-3 flex-grow-1">
                @GetTruncatedDescription()
            </p>
        }

        <!-- Action Buttons -->
        <div class="mt-auto">
            <SuggestionActions Mode="ActionMode.Individual"
                               Suggestion="@Suggestion"
                               OnSuggestionApproved="@OnSuggestionApproved"
                               OnSuggestionDenied="@OnSuggestionDenied" />
        </div>
    </div>
</div>

<script>
    function handleThumbnailError(img, videoId) {
        // Prevent infinite error loops
        if (img.dataset.errorCount) {
            img.dataset.errorCount = parseInt(img.dataset.errorCount) + 1;
        } else {
            img.dataset.errorCount = "1";
        }

        // Stop after 3 attempts to prevent infinite loops
        if (parseInt(img.dataset.errorCount) > 3) {
            return;
        }

        if (img.dataset.attempt === 'maxres') {
            // Try hqdefault
            img.src = 'https://img.youtube.com/vi/' + videoId + '/hqdefault.jpg';
            img.dataset.attempt = 'hq';
        } else if (img.dataset.attempt === 'hq') {
            // Try mqdefault
            img.src = 'https://img.youtube.com/vi/' + videoId + '/mqdefault.jpg';
            img.dataset.attempt = 'mq';
        } else if (img.dataset.attempt === 'mq') {
            // Try default
            img.src = 'https://img.youtube.com/vi/' + videoId + '/default.jpg';
            img.dataset.attempt = 'default';
        } else if (!img.dataset.attempt) {
            // First error - try maxresdefault
            img.src = 'https://img.youtube.com/vi/' + videoId + '/maxresdefault.jpg';
            img.dataset.attempt = 'maxres';
        }
    }
</script>