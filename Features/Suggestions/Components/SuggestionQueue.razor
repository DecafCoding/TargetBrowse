@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims
@using TargetBrowse.Features.Suggestions.Models
@using TargetBrowse.Features.Suggestions.Services
@using TargetBrowse.Services

@attribute [Authorize]

@rendermode InteractiveServer

<div class="suggestion-queue-container">
    <!-- Queue Header with Controls -->
    <div class="queue-header mb-4">
        <div class="d-flex flex-column flex-lg-row justify-content-between align-items-start align-items-lg-center gap-3">
            <!-- Queue Stats -->
            <div class="queue-stats">
                <h5 class="mb-1">
                    <i class="bi bi-collection-play me-2"></i>
                    Your Suggestion Queue
                </h5>
                @if (!QueueModel.IsLoading && QueueModel.Suggestions.Any())
                {
                    var counts = QueueModel.GetSourceCounts();
                    <div class="d-flex flex-wrap gap-2 small text-muted">
                        <span><strong>@counts.Total</strong> total</span>
                        @if (counts.BothSources > 0)
                        {
                            <span>• <span class="text-primary"><strong>@counts.BothSources</strong> high priority</span></span>
                        }
                        @if (counts.NearExpiry > 0)
                        {
                            <span>• <span class="text-warning"><strong>@counts.NearExpiry</strong> expiring soon</span></span>
                        }
                    </div>
                }
            </div>

            <!-- Filter and Sort Controls -->
            @if (!QueueModel.IsLoading && QueueModel.Suggestions.Any())
            {
                <div class="queue-controls d-flex flex-wrap gap-2">
                    <!-- Filter Dropdown -->
                    <div class="dropdown">
                        <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                            <i class="bi bi-funnel me-1"></i>
                            @GetFilterDisplayText()
                        </button>
                        <ul class="dropdown-menu">
                            <li>
                                <button class="dropdown-item @(QueueModel.Filter == SuggestionFilter.All ? "active" : "")"
                                        @onclick="() => SetFilter(SuggestionFilter.All)">
                                    All Suggestions
                                </button>
                            </li>
                            <li>
                                <button class="dropdown-item @(QueueModel.Filter == SuggestionFilter.BothSources ? "active" : "")"
                                        @onclick="() => SetFilter(SuggestionFilter.BothSources)">
                                    ⭐ High Priority
                                </button>
                            </li>
                            <li>
                                <button class="dropdown-item @(QueueModel.Filter == SuggestionFilter.ChannelOnly ? "active" : "")"
                                        @onclick="() => SetFilter(SuggestionFilter.ChannelOnly)">
                                    📺 Channel Updates
                                </button>
                            </li>
                            <li>
                                <button class="dropdown-item @(QueueModel.Filter == SuggestionFilter.TopicOnly ? "active" : "")"
                                        @onclick="() => SetFilter(SuggestionFilter.TopicOnly)">
                                    🔍 Topic Matches
                                </button>
                            </li>
                            <li><hr class="dropdown-divider"></li>
                            <li>
                                <button class="dropdown-item @(QueueModel.Filter == SuggestionFilter.NearExpiry ? "active" : "")"
                                        @onclick="() => SetFilter(SuggestionFilter.NearExpiry)">
                                    ⏰ Expiring Soon
                                </button>
                            </li>
                        </ul>
                    </div>

                    <!-- Sort Dropdown -->
                    <div class="dropdown">
                        <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                            <i class="bi bi-sort-down me-1"></i>
                            Sort
                        </button>
                        <ul class="dropdown-menu">
                            <li>
                                <button class="dropdown-item @(QueueModel.SortBy == SuggestionSort.CreatedDesc ? "active" : "")"
                                        @onclick="() => SetSort(SuggestionSort.CreatedDesc)">
                                    Newest First
                                </button>
                            </li>
                            <li>
                                <button class="dropdown-item @(QueueModel.SortBy == SuggestionSort.CreatedAsc ? "active" : "")"
                                        @onclick="() => SetSort(SuggestionSort.CreatedAsc)">
                                    Oldest First
                                </button>
                            </li>
                            @if (QueueModel.Suggestions.Any(s => s.Score.HasValue))
                            {
                                <li>
                                    <button class="dropdown-item @(QueueModel.SortBy == SuggestionSort.ScoreDesc ? "active" : "")"
                                            @onclick="() => SetSort(SuggestionSort.ScoreDesc)">
                                        Highest Score
                                    </button>
                                </li>
                            }
                            <li>
                                <button class="dropdown-item @(QueueModel.SortBy == SuggestionSort.ExpiryAsc ? "active" : "")"
                                        @onclick="() => SetSort(SuggestionSort.ExpiryAsc)">
                                    Expiring Soon
                                </button>
                            </li>
                        </ul>
                    </div>

                    <!-- Batch Actions Toggle -->
                    @if (QueueModel.FilteredSuggestions.Any())
                    {
                        <button class="btn @(ShowBatchMode ? "btn-primary" : "btn-outline-secondary") btn-sm"
                                @onclick="ToggleBatchMode">
                            <i class="bi bi-check2-square me-1"></i>
                            @(ShowBatchMode ? "Cancel" : "Select")
                        </button>
                    }
                </div>
            }
        </div>

        <!-- Batch Actions Bar -->
        @if (ShowBatchMode && QueueModel.ShowBatchActions)
        {
            <div class="batch-actions-bar mt-3 p-3 bg-light rounded">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <strong>@QueueModel.SelectedSuggestionIds.Count</strong> suggestions selected
                        <button class="btn btn-link btn-sm p-0 ms-2" @onclick="SelectAll">Select All</button>
                        <button class="btn btn-link btn-sm p-0 ms-2" @onclick="ClearSelection">Clear</button>
                    </div>
                    <SuggestionActions Mode="ActionMode.Batch"
                                       SelectedSuggestionIds="@QueueModel.SelectedSuggestionIds"
                                       OnBatchApproved="@HandleBatchApproved"
                                       OnBatchDenied="@HandleBatchDenied" />
                </div>
            </div>
        }

        <!-- Progress Bar -->
        @if (!QueueModel.IsLoading && QueueModel.Suggestions.Any())
        {
            <div class="queue-progress mt-3">
                <div class="d-flex justify-content-between align-items-center mb-1">
                    <small class="text-muted">Queue Usage</small>
                    <small class="text-muted">@QueueModel.Suggestions.Count / 100</small>
                </div>
                <div class="progress" style="height: 4px;">
                    <div class="progress-bar @GetProgressBarClass()"
                         style="width: @(QueueModel.ProgressPercentage)%"></div>
                </div>
                @if (QueueModel.IsNearLimit)
                {
                    <small class="text-warning mt-1 d-block">
                        <i class="bi bi-exclamation-triangle me-1"></i>
                        @if (QueueModel.IsAtLimit)
                        {
                            @:Queue is full. Approve or remove suggestions to get new ones.
                        }
                        else
                        {
                            @:Approaching queue limit. Consider reviewing suggestions.
                        }
                    </small>
                }
            </div>
        }
    </div>

    @if (QueueModel.IsLoading)
    {
        <div class="loading-state">
            <div class="text-center py-5">
                <div class="spinner-border text-primary mb-3" role="status">
                    <span class="visually-hidden">Loading suggestions...</span>
                </div>
                <h6>Loading your suggestions...</h6>
                <p class="text-muted mb-0">Gathering your personalized video recommendations</p>
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(QueueModel.ErrorMessage))
    {
        <div class="error-state">
            <div class="alert alert-danger d-flex align-items-center" role="alert">
                <i class="bi bi-exclamation-triangle me-2"></i>
                <div>
                    <strong>Error loading suggestions:</strong>
                    <div>@QueueModel.ErrorMessage</div>
                </div>
            </div>
            <div class="text-center">
                <button class="btn btn-primary" @onclick="RefreshSuggestions">
                    <i class="bi bi-arrow-clockwise me-1"></i>
                    Try Again
                </button>
            </div>
        </div>
    }
    else if (!QueueModel.Suggestions.Any())
    {
        <div class="empty-state text-center py-5">
            <i class="bi bi-collection text-muted mb-3" style="font-size: 4rem;"></i>
            <h4 class="text-muted mb-3">No suggestions yet</h4>
            <p class="text-muted mb-4">
                Get personalized video suggestions based on your tracked channels and topics.
                <br>
                Click "Get New Suggestions" to generate recommendations!
            </p>
            <div class="empty-state-tips">
                <div class="row g-3 mt-2">
                    <div class="col-md-4">
                        <div class="tip-card p-3 border rounded">
                            <i class="bi bi-youtube text-primary mb-2 d-block" style="font-size: 1.5rem;"></i>
                            <h6>Track Channels</h6>
                            <small class="text-muted">Add YouTube channels you follow to get notified of new videos</small>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="tip-card p-3 border rounded">
                            <i class="bi bi-tags text-success mb-2 d-block" style="font-size: 1.5rem;"></i>
                            <h6>Set Topics</h6>
                            <small class="text-muted">Define learning topics to discover relevant content across YouTube</small>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="tip-card p-3 border rounded">
                            <i class="bi bi-star text-warning mb-2 d-block" style="font-size: 1.5rem;"></i>
                            <h6>Rate Content</h6>
                            <small class="text-muted">Rate channels and videos to improve future suggestions</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        var filteredSuggestions = QueueModel.FilteredSuggestions;

        if (!filteredSuggestions.Any())
        {
            <div class="no-results-state text-center py-4">
                <i class="bi bi-funnel text-muted mb-3" style="font-size: 3rem;"></i>
                <h5 class="text-muted mb-2">No suggestions match your filter</h5>
                <p class="text-muted mb-3">Try adjusting your filter criteria or clearing all filters.</p>
                <button class="btn btn-outline-primary" @onclick="ClearFilters">
                    <i class="bi bi-x-circle me-1"></i>
                    Clear Filters
                </button>
            </div>
        }
        else
        {
            <div class="suggestions-grid">
                <div class="row g-4">
                    @foreach (var suggestion in filteredSuggestions)
                    {
                        <div class="col-12 col-md-6 col-xl-4">
                            <SuggestionCard Suggestion="@suggestion"
                                            AllowSelection="@ShowBatchMode"
                                            IsSelected="@QueueModel.SelectedSuggestionIds.Contains(suggestion.Id)"
                                            OnSelectionChanged="@HandleSelectionChanged"
                                            OnSuggestionApproved="@HandleSuggestionApproved"
                                            OnSuggestionDenied="@HandleSuggestionDenied" />
                        </div>
                    }
                </div>
            </div>

            <!-- Load More Button (if needed for large queues) -->
            @if (filteredSuggestions.Count >= 12 && HasMoreSuggestions)
            {
                <div class="text-center mt-4">
                    <button class="btn btn-outline-primary"
                            @onclick="LoadMoreSuggestions"
                            disabled="@IsLoadingMore">
                        @if (IsLoadingMore)
                        {
                            <div class="spinner-border spinner-border-sm me-2" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <span>Loading...</span>
                        }
                        else
                        {
                            <i class="bi bi-arrow-down-circle me-1"></i>
                            <span>Load More Suggestions</span>
                        }
                    </button>
                </div>
            }
        }
    }
</div>