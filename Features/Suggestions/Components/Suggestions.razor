@page "/suggestions"
@using Microsoft.AspNetCore.Authorization
@using TargetBrowse.Features.Suggestions.Models
@using TargetBrowse.Features.Suggestions.Components
@attribute [Authorize]
@inherits SuggestionsBase

@rendermode InteractiveServer

<PageTitle>Suggestions - YouTube Video Tracker</PageTitle>

<div class="suggestions-page">
    <!-- Page Header -->
    <div class="page-header mb-4">
        <div class="d-flex flex-column flex-lg-row justify-content-between align-items-start align-items-lg-center gap-3">
            <div>
                <h1 class="h2 mb-1">
                    <i class="bi bi-lightbulb me-2 text-primary"></i>
                    Smart Suggestions
                </h1>
                <p class="text-muted mb-0">
                    Discover personalized video recommendations based on your tracked channels and learning topics.
                </p>
            </div>
            
            <!-- Generate Suggestions Button -->
            <div class="suggestion-trigger">
                <button type="button"
                        class="btn btn-primary btn-lg"
                        @onclick="GenerateNewSuggestions"
                        disabled="@IsGenerating"
                        title="@GetGenerateButtonTooltip()">
                    @if (IsGenerating)
                    {
                        <div class="spinner-border spinner-border-sm me-2" role="status">
                            <span class="visually-hidden">Generating suggestions...</span>
                        </div>
                        <span>Generating...</span>
                    }
                    else
                    {
                        <i class="bi bi-magic me-2"></i>
                        <span>Get New Suggestions</span>
                    }
                </button>
                
                <!-- Generation Status -->
                @if (!string.IsNullOrEmpty(GenerationStatus))
                {
                    <div class="generation-status mt-2">
                        <small class="text-muted">@GenerationStatus</small>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="row">
        <div class="col-lg-9">
            <!-- Suggestion Queue Component -->
            <SuggestionQueue @ref="SuggestionQueueComponent" OnSuggestionsChanged="HandleSuggestionsChanged" />
        </div>
        
        <div class="col-lg-3">
            <!-- Help and Tips Sidebar -->
            <div class="sidebar-content">
                <!-- Quick Stats -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-question-circle me-2"></i>
                            Quick Stats
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="how-it-works-steps">
                            <div class="step mb-3">
                                <div class="step-icon bg-primary text-white rounded-circle d-inline-flex align-items-center justify-content-center me-2" style="width: 24px; height: 24px; font-size: 0.75rem;">1</div>
                                <div class="step-content d-inline-block">
                                    <strong>Tracked Channels: @TrackedChannelsCount</strong>
                                </div>
                            </div>
                            <div class="step mb-3">
                                <div class="step-icon bg-success text-white rounded-circle d-inline-flex align-items-center justify-content-center me-2" style="width: 24px; height: 24px; font-size: 0.75rem;">2</div>
                                <div class="step-content d-inline-block">
                                    <strong>Learning Topics: @TopicsCount</strong>
                                </div>
                            </div>
                            <div class="step mb-0">
                                <div class="step-icon bg-warning text-white rounded-circle d-inline-flex align-items-center justify-content-center me-2" style="width: 24px; height: 24px; font-size: 0.75rem;">3</div>
                                <div class="step-content d-inline-block">
                                    <strong>Pending Review: @PendingSuggestionsCount</strong>
                                </div>
                            </div>
                            <div class="step mb-0">
                                <div class="step-icon bg-warning text-white rounded-circle d-inline-flex align-items-center justify-content-center me-2" style="width: 24px; height: 24px; font-size: 0.75rem;">3</div>
                                <div class="stat-value @(LastGeneratedDaysAgo <= 1 ? "text-success" : LastGeneratedDaysAgo <= 7 ? "text-warning" : "text-muted")">
                                    @(LastGeneratedDaysAgo == 0 ? "Today" : $"{LastGeneratedDaysAgo}d ago")
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Generation History -->
                @if (RecentGenerations.Any())
                {
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">
                                <i class="bi bi-clock-history me-2"></i>
                                Recent Activity
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="generation-history">
                                @foreach (var generation in RecentGenerations.Take(5))
                                {
                                    <div class="generation-item d-flex justify-content-between align-items-center py-2 @(generation != RecentGenerations.Last() ? "border-bottom" : "")">
                                        <div>
                                            <small class="fw-medium">@generation.SuggestionsCount suggestions</small><br>
                                            <small class="text-muted">@generation.GeneratedAt.ToString("MMM d, h:mm tt")</small>
                                        </div>
                                        <div class="text-end">
                                            <small class="text-success">@generation.SuccessRate</small>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .suggestions-page {
        min-height: 100vh;
    }

    /* Page Header */
    .page-header {
        background: linear-gradient(135deg, var(--bs-primary-bg-subtle) 0%, transparent 50%);
        border-radius: 0.5rem;
        padding: 1.5rem;
        margin-bottom: 2rem;
    }

    .page-header h1 {
        font-weight: 700;
        color: var(--bs-emphasis-color);
    }

    /* Suggestion Trigger Button */
    .suggestion-trigger .btn-primary {
        font-weight: 600;
        padding: 0.75rem 2rem;
        border-radius: 0.5rem;
        box-shadow: 0 4px 12px rgba(13, 110, 253, 0.3);
        transition: all 0.2s ease;
        position: relative;
        overflow: hidden;
    }

    .suggestion-trigger .btn-primary:hover:not(:disabled) {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(13, 110, 253, 0.4);
    }

    .suggestion-trigger .btn-primary:disabled {
        opacity: 0.8;
        cursor: wait;
    }

    .generation-status {
        font-style: italic;
        animation: pulse 1.5s infinite;
    }

    /* Quick Stats Card */
    .quick-stats-card .stat-item {
        padding: 0.5rem;
    }

    .quick-stats-card .stat-value {
        font-size: 2rem;
        font-weight: 700;
        line-height: 1;
        margin-bottom: 0.25rem;
    }

    .quick-stats-card .stat-label {
        font-size: 0.875rem;
        color: var(--bs-secondary);
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 0.025em;
    }

    /* Sidebar Content */
    .sidebar-content .card {
        border-radius: 0.5rem;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
        transition: transform 0.2s ease;
    }

    .sidebar-content .card:hover {
        transform: translateY(-1px);
    }

    .sidebar-content .card-header {
        background: var(--bs-primary-bg-subtle);
        border-bottom: 1px solid var(--bs-border-color);
        padding: 1rem;
    }

    .sidebar-content .card-title {
        color: var(--bs-primary);
        font-weight: 600;
        font-size: 0.95rem;
    }

    /* How It Works Steps */
    .how-it-works-steps .step {
        display: flex;
        align-items: flex-start;
        gap: 0.75rem;
    }

    .how-it-works-steps .step-icon {
        flex-shrink: 0;
        font-weight: 600;
        margin-top: 0.1rem;
    }

    .how-it-works-steps .step-content {
        flex: 1;
        line-height: 1.4;
    }

    /* Tips List */
    .tips-list .tip-item {
        display: flex;
        align-items: center;
        line-height: 1.4;
    }

    .tips-list .tip-item:last-child {
        margin-bottom: 0 !important;
    }

    /* Generation History */
    .generation-history .generation-item {
        transition: background-color 0.2s ease;
    }

    .generation-history .generation-item:hover {
        background-color: var(--bs-tertiary-bg);
    }

    .generation-history .generation-item:not(:last-child) {
        border-bottom: 1px solid var(--bs-border-color) !important;
    }

    /* Quick Actions */
    .card-body .btn {
        transition: all 0.2s ease;
    }

    .card-body .btn:hover {
        transform: translateX(4px);
    }

    /* Mobile Responsive */
    @@media (max-width: 992px) {
        .page-header {
            padding: 1rem;
            margin-bottom: 1.5rem;
        }

        .page-header .d-flex {
            flex-direction: column !important;
            align-items: stretch !important;
        }

        .suggestion-trigger {
            width: 100%;
            margin-top: 1rem;
        }

        .suggestion-trigger .btn-primary {
            width: 100%;
            padding: 1rem;
        }

        .quick-stats-card .stat-value {
            font-size: 1.5rem;
        }

        .sidebar-content {
            margin-top: 2rem;
        }

        .sidebar-content .card {
            margin-bottom: 1rem !important;
        }
    }

    @@media (max-width: 576px) {
        .page-header h1 {
            font-size: 1.5rem;
        }

        .quick-stats-card .row > div {
            margin-bottom: 1rem;
        }

        .how-it-works-steps .step {
            flex-direction: column;
            text-align: center;
            gap: 0.5rem;
        }

        .tips-list .tip-item {
            flex-direction: column;
            text-align: center;
            gap: 0.25rem;
        }
    }

    /* Dark Theme */
    [data-bs-theme="dark"] .page-header {
        background: linear-gradient(135deg, var(--bs-primary-bg-subtle) 0%, transparent 50%);
    }

    [data-bs-theme="dark"] .sidebar-content .card-header {
        background: var(--bs-gray-800);
        border-bottom-color: var(--bs-border-color);
    }

    [data-bs-theme="dark"] .generation-history .generation-item:hover {
        background-color: var(--bs-gray-700);
    }

    [data-bs-theme="dark"] .generation-history .generation-item:not(:last-child) {
        border-bottom-color: var(--bs-border-color) !important;
    }

    /* Animations */
    @@keyframes pulse {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.7; }
    }

    /* Loading Button Animation */
    .suggestion-trigger .btn-primary .spinner-border {
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    /* Success State Animation */
    .generation-status {
        transition: color 0.3s ease;
    }

    .generation-status.success {
        color: var(--bs-success) !important;
    }

    /* Button Magic Effect */
    .suggestion-trigger .btn-primary::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
        transition: left 0.5s;
    }

    .suggestion-trigger .btn-primary:hover::before {
        left: 100%;
    }

    /* Stat Value Animation */
    .quick-stats-card .stat-value {
        transition: all 0.3s ease;
    }

    .quick-stats-card .stat-item:hover .stat-value {
        transform: scale(1.1);
    }

    /* Card Hover Effects */
    .sidebar-content .card {
        position: relative;
        overflow: hidden;
    }

    .sidebar-content .card::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(45deg, transparent, rgba(13, 110, 253, 0.05), transparent);
        opacity: 0;
        transition: opacity 0.3s ease;
        pointer-events: none;
    }

    .sidebar-content .card:hover::after {
        opacity: 1;
    }
</style>