@using Microsoft.AspNetCore.Components.Forms
@using TargetBrowse.Features.Videos.Models

@* Modal for rating videos with star input and notes *@

@if (IsVisible)
{
    <div class="modal fade show" tabindex="-1" style="display: block; background-color: rgba(0,0,0,0.5);"
         @onclick="HandleBackdropClick" @onclick:stopPropagation="false">
        <div class="modal-dialog modal-lg" @onclick:stopPropagation="true">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="bi bi-star me-2"></i>
                        @(Model?.IsEditing == true ? "Edit Rating" : "Rate Video")
                    </h5>
                    <button type="button" class="btn-close" @onclick="CloseModal" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    @if (Model != null)
                    {
                        <EditForm Model="@Model" OnValidSubmit="@HandleValidSubmit">
                            <DataAnnotationsValidator />

                            <!-- Video Information (Title Only) -->
                            <div class="mb-4">
                                <h6 class="video-title">@Model.VideoTitle</h6>
                            </div>

                            <!-- Star Rating Input -->
                            <div class="mb-4">
                                <label class="form-label">
                                    Rating <span class="text-danger">*</span>
                                </label>
                                <div class="rating-input-container">
                                    <StarRatingInput @bind-CurrentValue="Model.Stars"
                                                     Size="StarRatingInput.StarSize.Large"
                                                     ShowLabel="true"
                                                     CssClass="mb-2" />
                                    <ValidationMessage For="@(() => Model.Stars)" class="text-danger small" />
                                </div>
                            </div>

                            <!-- Notes Input -->
                            <div class="mb-4">
                                <label for="rating-notes" class="form-label">
                                    Notes <span class="text-danger">*</span>
                                </label>
                                <div class="notes-input-container">
                                    <InputTextArea @bind-Value="Model.Notes"
                                                   class="form-control notes-textarea"
                                                   id="rating-notes"
                                                   placeholder="Please explain your rating. What did you like or dislike about this video? (minimum 10 characters)"
                                                   rows="4"
                                                   maxlength="1000"
                                                   @oninput="OnNotesInput" />

                                    <div class="d-flex justify-content-between align-items-center mt-2">
                                        <ValidationMessage For="@(() => Model.Notes)" class="text-danger small" />
                                        <small class="@Model.NotesCharacterCountCssClass">
                                            @Model.NotesCharacterCount / 1000 characters
                                            @if (Model.NotesCharacterCount < 10)
                                            {
                                                <span class="text-danger">(minimum 10)</span>
                                            }
                                        </small>
                                    </div>

                                    @if (Model.NotesCharacterCount >= 10)
                                    {
                                        <div class="notes-preview mt-2 p-2 bg-light rounded">
                                            <small class="text-muted">
                                                <strong>Preview:</strong> @Model.Notes
                                            </small>
                                        </div>
                                    }
                                </div>
                            </div>

                            <!-- Form Validation Summary -->
                            <ValidationSummary class="alert alert-danger" />

                            <!-- Action Buttons -->
                            <div class="modal-footer">
                                <button type="button"
                                        class="btn btn-secondary"
                                        @onclick="CloseModal"
                                        disabled="@IsSubmitting">
                                    Cancel
                                </button>

                                @if (Model.IsEditing && OnDelete.HasDelegate)
                                {
                                    <button type="button"
                                            class="btn btn-outline-danger"
                                            @onclick="ShowDeleteConfirmation"
                                            disabled="@IsSubmitting">
                                        <i class="bi bi-trash me-1"></i>
                                        Delete Rating
                                    </button>
                                }

                                <button type="submit"
                                        class="btn btn-primary"
                                        disabled="@(IsSubmitting || !Model.IsValid)">
                                    @if (IsSubmitting)
                                    {
                                        <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                    }
                                    else
                                    {
                                        <i class="bi bi-star me-1"></i>
                                    }
                                    @(Model.IsEditing ? "Update Rating" : "Save Rating")
                                </button>
                            </div>
                        </EditForm>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    @if (ShowDeleteConfirm)
    {
        <div class="modal fade show" tabindex="-1" style="display: block; background-color: rgba(0,0,0,0.6); z-index: 1051;">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title text-danger">
                            <i class="bi bi-exclamation-triangle me-2"></i>
                            Delete Rating
                        </h5>
                        <button type="button" class="btn-close" @onclick="HideDeleteConfirmation"></button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete your rating for this video?</p>
                        <p class="text-muted small mb-0">This action cannot be undone, but you can always rate the video again later.</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button"
                                class="btn btn-secondary"
                                @onclick="HideDeleteConfirmation"
                                disabled="@IsDeleting">
                            Cancel
                        </button>
                        <button type="button"
                                class="btn btn-danger"
                                @onclick="HandleDelete"
                                disabled="@IsDeleting">
                            @if (IsDeleting)
                            {
                                <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                            }
                            Delete Rating
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
}